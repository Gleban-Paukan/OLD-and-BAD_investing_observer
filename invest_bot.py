import httplib2
import matplotlib.pyplot as plt
import numpy as np
import openpyxl
import os
import pandas as pd
import random
import sys
import telebot
import time as tm
from datetime import datetime, time, timedelta
from dateutil.parser import parse
from googleapiclient.discovery import build
from oauth2client.service_account import ServiceAccountCredentials
from openpyxl.styles import Font, Fill, PatternFill, NamedStyle, Side, Border
from requests.exceptions import ConnectionError, ReadTimeout
from telebot import types

import py_plot

bot = telebot.TeleBot('')
bot.parse_mode = 'html'
users_token = {}
users_bal = {}
users_login = {}
user = {}
ref_id = {}
ref_got = {}
time_id = {}
data = {}
moders = []
admins = []


@bot.message_handler(commands=['start'])
def welcome(message):
    try:
        if message.chat.type == 'private':
            with open('users_id.txt', 'r') as users_id:
                user_set = set()
                for i in users_id:
                    user_set.add(i.replace('\n', ''))
            if str(message.chat.id) not in user_set:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup.add(types.KeyboardButton('‚ÅÉ –†–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –∫—Ä–∏–ø—Ç–µ '))
                markup.add(types.KeyboardButton('‚ÅÉ –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ '))
                markup.add(types.KeyboardButton('‚ÅÉ –ó–∞—Ä–∞–±–æ—Ç–æ–∫ –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ '))
                markup.add(types.KeyboardButton('‚ÅÉ –ò—â—É —Å–æ–æ–±—â–µ—Å—Ç–≤–æ'))
                bot.send_message(message.chat.id,
                                 '''<b>
–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –∫—Ä–∏–ø—Ç–æ–∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤!
–ü–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è? –í—Å–µ–≥–æ —Ç—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞.
–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, —á—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–æ?
                                 </b>''', reply_markup=markup)
                bot.register_next_step_handler(message, expirience)
                with open('users_id.txt', 'a') as users_id:
                    users_id.write(str(message.chat.id) + '\n')
                with open('users_id.txt', 'r') as users_id:
                    user_set = set()
                    for i in users_id:
                        user_set.add(i.replace('\n', ''))
                with open('users_bal.txt', 'a') as non_set_bal:
                    non_set_bal.write(str(message.chat.id) + ' ' + '0' + '\n')
                with open('ref_got.txt', 'a') as non_set_ref:
                    non_set_ref.write(str(message.chat.id) + ' ' + '0' + '\n')
                with open('time_id.txt', 'a') as non_set_sub:
                    non_set_sub.write(str(message.chat.id) + ' ' + str((datetime.now()).strftime('%Y-%m-%d')) + '\n')
                if " " in message.text:
                    referrer_candidate = message.text.split()[1]
                    if str(message.chat.id) != referrer_candidate:
                        referer = referrer_candidate
                        non_set_ref = open('ref_id.txt', 'a')
                        non_set_ref.write(str(message.chat.id) + ' ' + referer + '\n')
                        non_set_ref.close()
                        ref_id[str(message.chat.id)] = referer

            else:
                if (bot.get_chat_member(-1001611319386, message.chat.id).status) == 'left':
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item5 = types.InlineKeyboardButton("üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/LINK_IS_PRIVATE')
                    markup.add(item5)
                    bot.send_message(message.chat.id,
                                     '<b>–°–æ–≤–µ—Ç—É–µ–º –∑–∞–π—Ç–∏ –≤ –Ω–∞—à —á–∞—Ç. –¢–∞–º –≤—Å–µ–≥–¥–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.</b>',
                                     parse_mode='html',
                                     reply_markup=markup)
                    tm.sleep(5)
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
                    item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
                    item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
                    item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
                    item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                    item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
                    item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
                    markup.add(item0, item3)
                    markup.add(item2, item7)
                    markup.add(item8, item9)
                    markup.add(item123)
                    bot.send_message(message.chat.id,
                                     '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –Ø —è–≤–ª—è—é—Å—å –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–º –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –≤–∞–º–∏.\n–ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <i>¬´‚ôª <ins>Ô∏è–ü–æ–º–æ—â—å</ins> ¬ª</i>.\n–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã —Å–æ–≤–µ—Ç—É–µ–º —É–∫–∞–∑–∞—Ç—å –≤–∞—à <i>USDT</i> —Ç–æ–∫–µ–Ω –≤–æ –≤–∫–ª–∞–¥–∫–µ <i>¬´üöÄ <ins>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è </ins>¬ª</i>. –ï–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.</b>'.format(
                                         message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)

                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
                    item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
                    item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
                    item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
                    item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                    item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
                    item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
                    markup.add(item0, item3)
                    markup.add(item2, item7)
                    markup.add(item8, item9)
                    markup.add(item123)
                    bot.send_message(message.chat.id,
                                     '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –Ø —è–≤–ª—è—é—Å—å –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–º –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –≤–∞–º–∏.\n–ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <i>¬´‚ôª <ins>Ô∏è–ü–æ–º–æ—â—å</ins> ¬ª</i>.\n–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã —Å–æ–≤–µ—Ç—É–µ–º —É–∫–∞–∑–∞—Ç—å –≤–∞—à <i>USDT</i> —Ç–æ–∫–µ–Ω –≤–æ –≤–∫–ª–∞–¥–∫–µ <i>¬´üöÄ <ins>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è </ins>¬ª</i>. –ï–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.</b>'.format(
                                         message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)



    except Exception as er:
        print(er)


@bot.message_handler(content_types=['left_chat_member'])
def leave_memb(message):
    bot.delete_message(message.chat.id, message.id)


@bot.message_handler(content_types=['new_chat_members'])
def qweqwewq(message):
    bot.delete_message(message.chat.id, message.id)
    msg = bot.send_message(message.chat.id,
                           f'<ins><i>{message.from_user.first_name}</i></ins>, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ!',
                           parse_mode='html')
    tm.sleep(60)
    bot.delete_message(msg.chat.id, msg.id)


@bot.message_handler(content_types=['text'])
def lalala(message):
    try:
        if message.chat.type == 'private':
            global user
            with open('verif_id.txt', 'r') as users_ver:
                user_ver = set()
                for i in users_ver:
                    user_ver.add(i.replace('\n', ''))
            with open('verif_id_2.txt', 'r') as users_ver_2:
                user_ver_2 = set()
                for i in users_ver_2:
                    user_ver_2.add(i.replace('\n', ''))
            with open('ref_got.txt') as file:
                for line in file:
                    key, *value = line.split()
                    ref_got[key] = value[0]
            with open('ref_id.txt') as file:
                for line in file:
                    key, *value = line.split()
                    ref_id[key] = value[0]
            with open('time_id.txt') as file:
                for line in file:
                    key, *value = line.split()
                    time_id[key] = value[0]
            with open('users_tok.txt') as file:
                for line in file:
                    key, *value = line.split()
                    users_token[key] = value[0]
            with open('users_bal.txt') as file:
                for line in file:
                    key, *value = line.split()
                    users_bal[key] = value[0]
            with open('users_log.txt') as file:
                for line in file:
                    key, *value = line.split()
                    users_login[key] = value[0]
            if message.text == '‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å':
                if str(message.chat.id) in users_login:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item2 = types.KeyboardButton("‚û∞ –ò–∑–º–µ–Ω–∏—Ç—å USDT-–∫–æ—à–µ–ª—ë–∫")
                    item7 = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
                    markup.add(item2)
                    markup.add(item7)
                    bot.send_message(message.chat.id, '<b>{0.first_name}, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: '.format(message.from_user,
                                                                                                bot.get_me()) + f'\n\nüí≥ –í–∞—à USDT –∫–æ—à–µ–ª—ë–∫: <code>{users_token[str(message.chat.id)]}</code>\n‚ÑπÔ∏è –í–∞—à ID —Ç–µ–ª–µ–≥—Ä–∞–º–º: <code>{message.chat.id}</code>\n\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: <ins><i>{users_bal[str(message.chat.id)]} USDT</i></ins>\nü•∑üèø –í–∞—à –ª–æ–≥–∏–Ω: <ins><i>{users_login[str(message.chat.id)]}</i></ins>\nüï∞ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: <ins><i>{time_id[str(message.chat.id)]}</i></ins>\nüí∏ –ü–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –ø—Ä–∏–≤–µ–¥–µ–Ω–æ: <ins><i>{len(get_key_many(ref_id, str(message.chat.id)))} —á–µ–ª.</i></ins></b>',
                                     parse_mode='html', reply_markup=markup)
                else:
                    bot.send_message(message.chat.id,
                                     '<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ <i>¬´üöÄ <ins>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</ins>¬ª</i></b>',
                                     parse_mode='html')
            elif message.text == 'üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
                if str(message.chat.id) not in users_token:
                    bot.send_message(message.chat.id,
                                     '<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à USDT TRC-20.\n\n <a href="https://telegra.ph/Kak-uznat-svoj-koshelyok-USDT-TRC20-06-03-3">–ö–∞–∫ —É–∑–Ω–∞—Ç—å –∫–æ—à–µ–ª—ë–∫ USDT-TRC20</a></b>',
                                     parse_mode='html')
                    bot.register_next_step_handler(message, token_remember)
                elif str(message.chat.id) not in users_login:
                    bot.send_message(message.chat.id,
                                     '<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω ( –ø—Å–µ–≤–¥–æ–Ω–∏–º ) –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º. –ï–≥–æ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.</b>',
                                     parse_mode='html')
                    bot.register_next_step_handler(message, login_remember)
                else:
                    bot.send_message(message.chat.id,
                                     '<b>–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–∂–º–∏—Ç–µ <i>¬´üë®üèª <ins>–ü—Ä–æ—Ñ–∏–ª—å</ins>¬ª</i></b>',
                                     parse_mode='html')
            elif message.text == '‚ûñ –í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏':
                bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏.</b>', parse_mode='html')
                bot.register_next_step_handler(message, cash_out)
            elif message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
                item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
                item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
                item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
                item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
                item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
                item10 = types.KeyboardButton('/admin')
                markup.add(item3)
                markup.add(item2, item7)
                markup.add(item8, item9)
                markup.add(item0)
                markup.add(item123)
                markup.add(item10)
                bot.send_message(message.chat.id,
                                 '<b>–•–æ–∑—è–∏–Ω –±–∞—Ä–∏–Ω.</b>'.format(
                                     message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)
            elif message.text == 'üéô –û–±—â–∏–π —á–∞—Ç':
                bot.send_message(message.chat.id,
                                 '<b>–ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –Ω–∞—à <i> <a href="https://t.me/LINK_IS_PRIVATE">—á–∞—Ç</a></i>!</b>',
                                 parse_mode='html')
            elif message.text == '/admin' and (str(message.chat.id) in admins):
                user[message.chat.id] = ''
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
                item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
                item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
                item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
                item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
                item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
                markup.add(item0, item3)
                markup.add(item2, item7)
                markup.add(item8, item9)
                markup.add(item123)
                item14 = types.KeyboardButton('–ü–∞–º—è—Ç–∫–∞')
                item10 = types.KeyboardButton('–ù–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ ID —Ç–µ–ª–µ–≥—Ä–∞–º–º')
                item11 = types.KeyboardButton('–ù–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –ª–æ–≥–∏–Ω—É')
                item12 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å ( –ø–æ ID —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ )')
                item13 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å ( –ø–æ –ª–æ–≥–∏–Ω—É )')
                markup.add(item14)
                markup.add(item10)
                markup.add(item11)
                markup.add(item12)
                markup.add(item13)
                markup.add('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ')
                markup.add('/cash_out')
                bot.send_message(message.chat.id, '<b>–£–∑–Ω–∞—é.</b>', parse_mode='html', reply_markup=markup)
            elif message.text == '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ':
                with open('ready_id.txt', 'r') as users_id:
                    user_red = set()
                    for i in users_id:
                        user_red.add(i.replace('\n', ''))
                bot.send_message(message.chat.id, len(users_bal))
                count = 0
                for i in users_bal:
                    if users_bal[i] != '0':
                        count += 1
                bot.send_message(message.chat.id, f'–ò–∑ –Ω–∏—Ö —Å –±–∞–ª–∞–Ω—Å–æ–º:<code> {count}</code>')
                bot.send_message(message.chat.id, f'–ò–∑ –Ω–∏—Ö –ø—Ä–æ—à–ª–æ –≤–æ—Ä–æ–Ω–∫—É: <code> {len(user_red)}</code>')
            elif message.text == '/cash_out':
                if str(message.chat.id) in admins:
                    bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ, –ø–æ –∫–∞–∫–æ–º—É –ø—Ä–æ—Ü–µ–Ω—Ç—É —Å—á–∏—Ç–∞—Ç—å.</b>', parse_mode='html')
                    bot.register_next_step_handler(message, pereschet)
            elif message.text == '–ü–∞–º—è—Ç–∫–∞':
                bot.send_message(message.chat.id,
                                 '<b>‚Ä¢ <ins><i>/admin</i></ins> –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏: <i>–ø—Ä–æ—Å—Ç–æ–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∞ —Ç–∞–∫–∂–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>\n\n‚Ä¢ <ins><i>/cash_out</i></ins> —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç, –º–µ—Å—è—á–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –∏ –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤–µ—Å—å –¥–æ—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –º–µ—Å—è—Ü. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å—ë –≤ —á–∞—Ç "–í—ã–≤–æ–¥ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤" –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç excel-—Ç–∞–±–ª–∏—Ü—É\n\n‚Ä¢ <ins><i>/send</i></ins> —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Å–æ–æ–±—â–µ–Ω–∏–µ. –°–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –Ω–∞ –∞–±–∑–∞—Ü—ã, –≥–ª–∞–≤–Ω–æ–µ —Å –ø—Ä–æ–±–µ–ª–æ–º.\n\n‚Ä¢ <ins><i>/send_all</i></ins> –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —Å–∞–º—É –∫–æ–º–∞–Ω–¥—É –∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.\n–ü—Ä–∏–º–µ—Ä: <i>/send_all –í—ã–≤–æ–¥ –¥–µ–Ω–µ–≥ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ 12:00 –ø–æ –ú–°–ö!</i></b>',
                                 parse_mode='html')
            elif message.text == '–∏–Ω–≤–µ—Å—Ç':
                markup = types.InlineKeyboardMarkup(row_width=1)
                item10 = types.InlineKeyboardButton("–ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –Ω–∞—à —á–∞—Ç!", url='https://t.me/LINK_IS_PRIVATE')
                markup.add(item10)
                with open('photo_2022-06-05_16-22-43.jpg', 'rb') as file:
                    bot.send_photo(message.chat.id, file, caption='''<b>
–ü–æ—á–µ–º—É –º—ã?

üî∞ NAME IS PRIVATE ‚Äì —ç—Ç–æ —É–ø—Ä–∞–≤–ª—è—é—â–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏ –ª–µ–≥–∫–æ.
–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –∏—é–ª—è 2021 –≥–æ–¥–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.

–í —Ä—è–¥–µ –Ω–∞—à–∏—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤:

‚òëÔ∏è –ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å.
–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –≤—Å–µ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º.
–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ–æ—Ç—á—ë—Ç—ã —Å –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ç–æ—Ä–≥–æ–≤, —Ç–µ–º —Å–∞–º—ã–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å. –§–æ—Ä–º–∞—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–≤–µ—Å—Ç–æ–∫: –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å, –Ω–æ–≤–æ—Å—Ç–∏, –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç.

‚òëÔ∏è –û–ø—ã—Ç.
–í –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç—Ä–µ–π–¥–µ—Ä—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –æ–±–ª–∞–¥–∞—é—â–∏–µ –æ–ø—ã—Ç–æ–º –±–æ–ª–µ–µ 8 –ª–µ—Ç, –∫–æ—Ç–æ—Ä—ã–µ –∑–Ω–∞—é—Ç –∫–∞–∫ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –ù–∞—à–∏ —Ç—Ä–µ–π–¥–µ—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—é—Ç —Å —Ç–æ–ø 10 —Ç—Ä–µ–π–¥–µ—Ä–∞–º–∏ –ø–æ —Ç–æ—Ä–≥–æ–≤–ª–µ –≤ —Å—Ç—Ä–∞–Ω–∞—Ö –°–ù–ì –Ω–∞ –±–∏—Ä–∂–µ Binance. –û–Ω–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ 24/7 –∏–∑—É—á–∞—é—Ç —Ä—ã–Ω–æ–∫ –∏ –ø–æ–¥–±–∏—Ä–∞—é—Ç —Å–∞–º—ã–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

–î–æ–≤–µ—Ä–∏–µ ‚Äì –∫–ª—é—á–µ–≤–æ–π —Å–º—ã—Å–ª –±–∏–∑–Ω–µ—Å–∞, —Ç–∞–∫ –∂–µ –¥–æ–≤–µ—Ä–∏–µ –∫–ª—é—á–µ–≤–æ–π —Ñ–∞–∫—Ç–æ—Ä —Å–µ–º—å–∏. –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –Ω–∞–º –∏ —Å—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π —Å–µ–º—å–∏!
–û —Å–≤–æ–µ–π —Å–µ–º—å–µ –º—ã –∑–∞–±–æ—Ç–∏–º—Å—è –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å.</b>'
    ''', parse_mode='html', reply_markup=markup)
                bot.send_message(message.chat.id,
                                 '<b>‚úÖ <ins><i>–ê–Ω—Ç–∏–∫—Ä–∏–∑–∏—Å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</i></ins>\n\nüí∏ –ú—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤–∞—à–µ–º—É –≤–Ω–∏–º–∞–Ω–∏—é <ins>–ø—É—Ç—å –∫ –ø–∞—Å—Å–∏–≤–Ω–æ–º—É –∑–∞—Ä–∞–±–æ—Ç–∫—É</ins>. –ú—ã ‚Äî <i>–ö—Ä–∏–ø—Ç–æ–∏–Ω–≤–µ—Å—Ç–æ—Ä—ã <ins>LINK_IS_PRIVATE </ins></i>\nüéâ –ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ —É–∑–Ω–∞–π, –∫–∞–∫ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–≤–∫—É 40% –≥–æ–¥–æ–≤—ã—Ö!</b>',
                                 parse_mode='html')
            elif message.text == '‚úÖ –ü–æ—á–µ–º—É –º—ã':
                bot.send_message(message.chat.id,
                                 '''<b>
–ü–æ—á–µ–º—É –º—ã?

üî∞ NAME IS PRIVATE ‚Äì —ç—Ç–æ —É–ø—Ä–∞–≤–ª—è—é—â–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏ –ª–µ–≥–∫–æ.
–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –∏—é–ª—è 2021 –≥–æ–¥–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
–¢–æ—Ä–≥—É–µ–º –Ω–∞ –º–∏—Ä–æ–≤–æ–π –±–∏—Ä–∂–µ Binance, –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è –ª–∏–¥–µ—Ä–æ–º –Ω–∞ —Ä—ã–Ω–∫–µ.
–õ—é–¥–∏ –¥–æ–≤–µ—Ä—è—é—Ç –Ω–∞–º —Å–≤–æ–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏, –∞ –º—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª—é–¥—è–º, —á—Ç–æ –º–æ–∂–Ω–æ –≤—ã–π—Ç–∏ –Ω–∞ –ø–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —á–µ—Å—Ç–Ω–æ –∏ –±–µ–∑ –æ–±–º–∞–Ω–∞.

–í —Ä—è–¥–µ –Ω–∞—à–∏—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤:

‚òëÔ∏è <ins>–ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å.</ins>
–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –≤—Å–µ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º.
–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ–æ—Ç—á—ë—Ç—ã —Å –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ç–æ—Ä–≥–æ–≤, —Ç–µ–º —Å–∞–º—ã–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å. –§–æ—Ä–º–∞—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–≤–µ—Å—Ç–æ–∫: –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å, –Ω–æ–≤–æ—Å—Ç–∏, –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç.

‚òëÔ∏è <ins>–û–ø—ã—Ç.</ins>
–í –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç—Ä–µ–π–¥–µ—Ä—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –æ–±–ª–∞–¥–∞—é—â–∏–µ –æ–ø—ã—Ç–æ–º –±–æ–ª–µ–µ 8 –ª–µ—Ç, –∫–æ—Ç–æ—Ä—ã–µ –∑–Ω–∞—é—Ç –∫–∞–∫ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –ù–∞—à–∏ —Ç—Ä–µ–π–¥–µ—Ä—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—é—Ç —Å —Ç–æ–ø 10 —Ç—Ä–µ–π–¥–µ—Ä–∞–º–∏ –ø–æ —Ç–æ—Ä–≥–æ–≤–ª–µ –≤ —Å—Ç—Ä–∞–Ω–∞—Ö –°–ù–ì –Ω–∞ –±–∏—Ä–∂–µ Binance. –û–Ω–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ 24/7 –∏–∑—É—á–∞—é—Ç —Ä—ã–Ω–æ–∫ –∏ –ø–æ–¥–±–∏—Ä–∞—é—Ç —Å–∞–º—ã–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

‚òëÔ∏è <ins>–ë–æ–Ω—É—Å—ã.</ins>
–£ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –µ—Å—Ç—å —Ä–∞–∑–æ–≤–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ (—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å) –∑–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏–≤–ª–µ—á—ë–Ω–Ω–æ–≥–æ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞ –≤ –≤–∏–¥–µ 3% –æ—Ç —Å—É–º–º—ã –≤–Ω–µ—Å–µ–Ω–Ω–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –∏ 1% —Å –ø—Ä–∏–±—ã–ª–∏ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü. 

–î–æ–≤–µ—Ä–∏–µ ‚Äì –∫–ª—é—á–µ–≤–æ–π —Å–º—ã—Å–ª –±–∏–∑–Ω–µ—Å–∞, —Ç–∞–∫ –∂–µ –¥–æ–≤–µ—Ä–∏–µ –∫–ª—é—á–µ–≤–æ–π —Ñ–∞–∫—Ç–æ—Ä —Å–µ–º—å–∏. –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –Ω–∞–º –∏ —Å—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π —Å–µ–º—å–∏!
–û —Å–≤–æ–µ–π —Å–µ–º—å–µ –º—ã –∑–∞–±–æ—Ç–∏–º—Å—è –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å.</b>
                                 ''', parse_mode='html')
            elif message.text == 'üìâ –ü–æ–Ω–∏–∑–∏—Ç—å –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
                bot.send_message(message.chat.id, '<b>–ù–∞ —Å–∫–æ–ª—å–∫–æ —Ä—É–±–ª–µ–π?</b>', parse_mode='html')
                bot.register_next_step_handler(message, minus_balance_by_login)
            elif message.text == 'üìà –ü–æ–≤—ã—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
                bot.send_message(message.chat.id, '<b>–ù–∞ —Å–∫–æ–ª—å–∫–æ —Ä—É–±–ª–µ–π?</b>', parse_mode='html')
                bot.register_next_step_handler(message, add_balance_by_login)
            elif '/send_all' in message.text and str(message.chat.id) in admins:
                users_id = set()
                non_set = open('users_id.txt', 'r')
                for i in non_set:
                    users_id.add(i.strip())
                non_set.close()
                for user in users_id:
                    try:
                        bot.send_message(user, message.text[message.text.find(' '):])
                    except Exception as er:
                        print(er)
            elif '/send' in str(message.text) and str(message.chat.id) in admins:
                bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ ID –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª')
                bot.register_next_step_handler(message, send)
            elif message.text == 'üîù –í—ã–≤–µ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏':
                if ref_got[str(message.chat.id)] != 0:
                    ref_out(message)
                else:
                    bot.send_message(message.chat.id, '<b>–ü–æ–∫–∞ —á—Ç–æ –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ –Ω–æ–ª—å. –ü—Ä–∏–≤–µ–¥–∏—Ç–µ –∫–æ–≥–æ-—Ç–æ.</b>',
                                     parse_mode='html')
            elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å ( –ø–æ –ª–æ–≥–∏–Ω—É )':
                bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω —á–µ–ª–æ–≤–µ–∫–∞</b>', parse_mode='html')
                bot.register_next_step_handler(message, change_balanse_by_login)
            elif message.text == 'üíî –ü–æ–Ω–∏–∑–∏—Ç—å –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
                bot.send_message(message.chat.id, '<b>–ù–∞ —Å–∫–æ–ª—å–∫–æ —Ä—É–±–ª–µ–π?</b>', parse_mode='html')
                bot.register_next_step_handler(message, minus_balance_by_id)
            elif message.text == 'üíõ –ü–æ–≤—ã—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
                bot.send_message(message.chat.id, '<b>–ù–∞ —Å–∫–æ–ª—å–∫–æ —Ä—É–±–ª–µ–π?</b>', parse_mode='html')
                bot.register_next_step_handler(message, add_balance_by_id)
            elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å ( –ø–æ ID —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ )':
                bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ ID —á–µ–ª–æ–≤–µ–∫–∞</b>', parse_mode='html')
                bot.register_next_step_handler(message, change_balanse_by_id)
            elif message.text == '–ù–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ ID —Ç–µ–ª–µ–≥—Ä–∞–º–º':
                bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</b>', parse_mode='html')
                bot.register_next_step_handler(message, find_user_by_ID)
            elif message.text == '–ù–∞–π—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –ª–æ–≥–∏–Ω—É':
                bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</b>', parse_mode='html')
                bot.register_next_step_handler(message, find_user_by_login)
            elif message.text == '‚ûï –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç':
                bot.send_message(message.chat.id,
                                 '<b>–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á—ë—Ç–∞ –ø–µ—Ä–µ–≤–µ—Ä–¥–∏—Ç–µ –º–æ–Ω–µ—Ç—ã –Ω–∞ –∫–æ—à–µ–ª—ë–∫ <code>5379331848:AAGA05o5sIL8SK623wt2aRWFAw7RlRGUfgs</code> –∏ –Ω–∞–ø–∏—à–∏—Ç–µ <i><a href="https://t.me/LINK_IS_PRIVATE">–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞</a></i>. –ë—É–¥—å—Ç–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–∏—Å–ª–∞—Ç—å <ins>txid-–∫–æ–¥</ins>.</b>',
                                 parse_mode='html')
            elif message.text == '‚û∞ –ò–∑–º–µ–Ω–∏—Ç—å USDT-–∫–æ—à–µ–ª—ë–∫':
                bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à USDT-—Ç–æ–∫–µ–Ω.</b>', parse_mode='html')
                bot.register_next_step_handler(message, token_change)
            elif message.text == 'ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞':
                bot.send_message(message.chat.id,
                                 f'<b>–ü–æ —É—Å–ª–æ–≤–∏—è–º –Ω–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ 3% —Ä–∞–∑–æ–≤–æ–≥–æ –±–æ–Ω—É—Å–∞ –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –∏ 1% –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω–æ –æ—Ç —Å—É–º–º—ã –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ.\n\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: t.me/LINK_IS_PRIVATE?start={message.chat.id}</b>',
                                 parse_mode='html')
            elif message.text == '‚ôªÔ∏è –ü–æ–º–æ—â—å':
                bot.send_message(message.chat.id, 'https://telegra.ph/Vopros-otvet-06-13')
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton('‚ùå  –ó–∞–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ')
                item2 = types.KeyboardButton('üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')  # üîô
                markup.add(item1, item2)
                bot.send_message(message.chat.id,
                                 'üì© –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –Ω–∏–∂–µ. –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫.\n\n‚ùåÔ∏è –î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–±—Ä–∞—â–µ–Ω–∏—è, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´<b>–ó–∞–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ</b>¬ª',
                                 reply_markup=markup)
                bot.register_next_step_handler(message, peresil)
            elif message.text == 'üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø—Ä–∏–±—ã–ª–∏':
                bot.send_message(message.chat.id,
                                 '<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–∏–±—ã–ª—å</b>',
                                 parse_mode='html')
                bot.register_next_step_handler(message, calculate_money)
            elif message.text == '‚ùì –ö–∞–∫ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å':
                bot.send_message(message.chat.id,
                                 '<b>–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ <i><a href="https://telegra.ph/Kak-investirovat-06-03">c—Ç–∞—Ç—å—é</a></i> </b>',
                                 parse_mode='html')
            elif message.text == 'üìà –ù–∞—á–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å':
                # if str(message.chat.id) in user_ver:
                bot.send_message(message.chat.id,
                                 f'<b>–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É <i><a href="https://t.me/{random.choice(moders)}">–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É</a></i>.</b>',
                                 disable_web_page_preview=True, parse_mode='html')
                # else:
                #     msg = bot.send_message(message.chat.id, '<b>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ.</b>', parse_mode='html')
                #     markup = types.InlineKeyboardMarkup(row_width=1)
                #     item6 = types.InlineKeyboardButton('‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω', callback_data='ver_user')
                #     markup.add(item6)
                #     with open('–¥–æ–≥–æ–≤–æ—Ä_–¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ_—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è_—Å_–¥–∞–Ω–Ω—ã–º–∏_–æ–æ–æ.doc', 'rb') as file:
                #         bot.send_document(message.chat.id, file, reply_markup=markup)
                #     time.sleep(30)
                #     bot.delete_message(msg.chat.id, msg.id)
            elif message.text == 'üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å':
                if str(message.chat.id) in user_ver_2:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item2 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
                    item3 = types.KeyboardButton('‚ùì –ö–∞–∫ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                    item4 = types.KeyboardButton('üìà –ù–∞—á–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                    markup.add(item3, item4)
                    markup.add(item2)
                    bot.send_message(message.chat.id,
                                     '''<b>
                                 ‚úÖ–í—ã –º–æ–∂–µ—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω–æ 3-5% –≤ –º–µ—Å—è—Ü.

üí∞–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - 100 USDT.
üí∞–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.</b>''', parse_mode='html',
                                     reply_markup=markup)
                else:
                    msg = bot.send_message(message.chat.id, '<b>–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ.</b>',
                                           parse_mode='html')
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item6 = types.InlineKeyboardButton('‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω', callback_data='ver_user_2')
                    markup.add(item6)
                    with open('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ_—Å–æ–≥–ª–∞—à–µ–Ω–∏–µ_–Ω–∞_—Ç–µ–ª–µ–≥—Ä–∞–º–º_–±–æ—Ç.doc', 'rb') as file:
                        bot.send_document(message.chat.id, file, reply_markup=markup)
                    tm.sleep(30)
                    bot.delete_message(msg.chat.id, msg.id)
            elif str(message.text).lower() == '—Ç–æ–ø':
                array = []
                for i in users_bal:
                    array.append(users_bal[i])
                for i in range(len(array) - 1, 0, -1):
                    if array[i] == '0':
                        array.remove(array[i])
                counter = 1
                text = ''
                i = 0
                array = sorted(array, reverse=True)
                while i < len(array):
                    if len(get_key_many(users_bal, array[i])) != 1:
                        for j in range(len(get_key_many(users_bal, array[i]))):
                            text += f'{counter + j} ‚Äî {users_login[get_key_many(users_bal, array[i])[j]]}, {users_bal[get_key_many(users_bal, array[i])[j]]}\n'
                        i += len(get_key_many(users_bal, array[i]))
                        counter += len(get_key_many(users_bal, array[i]))
                    else:
                        text += f'{counter} ‚Äî {users_login[get_key_many(users_bal, array[i])[0]]}, {users_bal[get_key_many(users_bal, array[i])[0]]}\n'
                        i += 1
                    counter += 1
                bot.send_message(message.chat.id, f'<b>{text}</b>', parse_mode='html')
            elif message.text == '–º–∞—Ä–∫–µ—Ç–∏–Ω–≥':
                bot.send_message(message.chat.id,
                                 '<b>–í–≤–µ–¥–∏, –∫–∞–∫–∏–µ —Ç–µ–≥–∏ –≤–∞–º –Ω—É–∂–Ω—ã. –ù–µ–æ–±—Ö–æ–∏–º–æ –≤–≤–æ–¥–∏—Ç—å –∫–∞–∂–¥—ã–π —Ç–µ–≥ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏. –ü—Ä–∏–º–µ—Ä:\n\ntg_01\ntg__991\nGenWake</b>',
                                 parse_mode='html')
                bot.register_next_step_handler(message, marketing)
            elif message.text == 'üîô –ù–∞–∑–∞–¥':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
                item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
                item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
                item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
                item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
                item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
                markup.add(item0, item3)
                markup.add(item2, item7)
                markup.add(item8, item9)
                markup.add(item123)
                bot.send_message(message.chat.id,
                                 '<b>–í–æ–∑–≤—Ä–∞—â–µ–Ω–æ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>'.format(
                                     message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)
        else:
            if message.chat.id == -1001654956289:
                if '/send' in str(message.text):
                    id = str(message.text)[
                         len('/send') + 1:len('/send') + 1 + (str(message.text)[len('/send') + 1:].find(' '))]
                    bot.send_message(int(id), str(message.text)[
                                              len('/send') + 2 + (str(message.text)[len('/send') + 1:].find(' ')):])
                else:
                    if message.reply_to_message.forward_from != None:
                        bot.send_message(message.reply_to_message.forward_from.id, message.text)
                    else:
                        bot.send_message(message.chat.id, '–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–Ω–æ–Ω–∏–º–∫–∞')
    except Exception as er:
        print(er)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'check_sub':
                if (bot.get_chat_member(-1001611319386, call.message.chat.id).status) == 'left':
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item5 = types.InlineKeyboardButton("üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/LINK_IS_PRIVATE')
                    item6 = types.InlineKeyboardButton('‚úîÔ∏è –ü–æ–¥–ø–∏—Å–∞–ª—Å—è', callback_data='check_sub')
                    markup.add(item5, item6)
                    bot.send_message(call.message.chat.id,
                                     '<b>–ü—Ä–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, –ø—Ä–æ–π–¥—è –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.</b>',
                                     parse_mode='html',
                                     reply_markup=markup)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
                    item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
                    item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
                    item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
                    item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                    item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
                    item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
                    markup.add(item0, item3)
                    markup.add(item2, item7)
                    markup.add(item8, item9)
                    markup.add(item123)
                    bot.send_message(call.message.chat.id,
                                     '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –Ø —è–≤–ª—è—é—Å—å –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–º –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –≤–∞–º–∏.\n–ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <i>¬´üìú<ins> –ü–æ–º–æ—â—å</ins>¬ª</i>.\n–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã —Å–æ–≤–µ—Ç—É–µ–º –≤–∞—à USDT —Ç–æ–∫–µ–Ω –≤–æ –≤–∫–ª–∞–¥–∫–µ <i>¬´üë®üèª <ins>–ü—Ä–æ—Ñ–∏–ª—å</ins>¬ª</i>. –ï–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.</b>'.format(
                                         call.message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)
            elif call.data == 'ver_user':
                bot.send_message(call.message.chat.id,
                                 f'<b>–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É <i><a href="https://t.me/{random.choice(moders)}">–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É</a></i>.</b>',
                                 disable_web_page_preview=True, parse_mode='html')
                with open('verif_id.txt', 'a') as users_id:
                    users_id.write(str(call.message.chat.id) + '\n')
            elif call.data == 'ver_user_2':
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item2 = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
                item3 = types.KeyboardButton('‚ùì –ö–∞–∫ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                item4 = types.KeyboardButton('üìà –ù–∞—á–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
                markup.add(item3, item4)
                markup.add(item2)
                bot.send_message(call.message.chat.id,
                                 '''<b>
‚úÖ–í—ã –º–æ–∂–µ—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω–æ 3-5% –≤ –º–µ—Å—è—Ü.

üí∞–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - 100 USDT.
üí∞–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.</b>''', parse_mode='html',
                                 reply_markup=markup)
                with open('verif_id_2.txt', 'a') as users_id:
                    users_id.write(str(call.message.chat.id) + '\n')
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
    except Exception as er:
        print(er)


@bot.message_handler(content_types=['contact'])
def lalala(message):
    try:
        google_sheets_registration([data[str(message.chat.id)]])
        print(message)
        bot.send_message(message.chat.id, '<b>–û—Ç–ª–∏—á–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è!</b>')
        if (bot.get_chat_member(-1001611319386, message.chat.id).status) == 'left':
            markup = types.InlineKeyboardMarkup(row_width=1)
            item5 = types.InlineKeyboardButton("üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/LINK_IS_PRIVATE')
            markup.add(item5)
            bot.send_message(message.chat.id, '<b>–°–æ–≤–µ—Ç—É–µ–º –∑–∞–π—Ç–∏ –≤ –Ω–∞—à —á–∞—Ç. –¢–∞–º –≤—Å–µ–≥–¥–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.</b>',
                             parse_mode='html',
                             reply_markup=markup)
            tm.sleep(5)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
            item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
            item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
            item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
            item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
            item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
            item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
            markup.add(item0, item3)
            markup.add(item2, item7)
            markup.add(item8, item9)
            markup.add(item123)
            bot.send_message(message.chat.id,
                             '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –Ø —è–≤–ª—è—é—Å—å –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–º –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –≤–∞–º–∏.\n–ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <i>¬´‚ôª <ins>Ô∏è–ü–æ–º–æ—â—å</ins> ¬ª</i>.\n–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã —Å–æ–≤–µ—Ç—É–µ–º —É–∫–∞–∑–∞—Ç—å –≤–∞—à <i>USDT</i> —Ç–æ–∫–µ–Ω –≤–æ –≤–∫–ª–∞–¥–∫–µ <i>¬´üöÄ <ins>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è </ins>¬ª</i>. –ï–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.</b>'.format(
                                 message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
            item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
            item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
            item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
            item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
            item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
            item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
            markup.add(item0, item3)
            markup.add(item2, item7)
            markup.add(item8, item9)
            markup.add(item123)
            bot.send_message(message.chat.id,
                             '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –Ø —è–≤–ª—è—é—Å—å –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–º –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –≤–∞–º–∏.\n–ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <i>¬´‚ôª <ins>Ô∏è–ü–æ–º–æ—â—å</ins> ¬ª</i>.\n–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã —Å–æ–≤–µ—Ç—É–µ–º —É–∫–∞–∑–∞—Ç—å –≤–∞—à <i>USDT</i> —Ç–æ–∫–µ–Ω –≤–æ –≤–∫–ª–∞–¥–∫–µ <i>¬´üöÄ <ins>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è </ins>¬ª</i>. –ï–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.</b>'.format(
                                 message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)
    except Exception as er:
        print(er)


def expirience(message):
    data[str(message.chat.id)] = [message.text]
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('‚ÅÉ –ü—Ä–æ–±–æ–≤–∞–ª —Ç–æ—Ä–≥–æ–≤–∞—Ç—å'))
    markup.add(types.KeyboardButton('‚ÅÉ –ù–æ–≤–∏—á–æ–∫'))
    bot.send_message(message.chat.id,
                     '''<b>
                     –ö–∞–∫–æ–π —É –≤–∞—Å –æ–ø—ã—Ç —Ç–æ—Ä–≥–æ–≤–ª–∏ –∫—Ä–∏–ø—Ç–æ–π?
                     </b>''', reply_markup=markup)
    bot.register_next_step_handler(message, investing)


def investing(message):
    data[str(message.chat.id)].append(message.text)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('‚ÅÉ –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–æ–±–æ–≤–∞–ª'))
    markup.add(types.KeyboardButton('‚ÅÉ –ü—Ä–æ–±–æ–≤–∞–ª –ø–æ –º–∏–Ω–∏–º—É–º—É'))
    markup.add(types.KeyboardButton('‚ÅÉ –°–æ–±—Ä–∞–ª –Ω–µ–±–æ–ª—å—à–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å'))
    markup.add(types.KeyboardButton('‚ÅÉ –¢–æ—Ä–≥—É—é –ø–æ—Å—Ç–æ—è–Ω–Ω–æ'))
    markup.add(types.KeyboardButton('‚ÅÉ –î—Ä—É–≥–æ–µ'))
    bot.send_message(message.chat.id,
                     '''<b>
–ï—Å—Ç—å –ª–∏ —É–∂–µ –æ–ø—ã—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –¥—Ä—É–≥–æ–≥–æ —Ä–æ–¥–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö, –≤ –∞–∫—Ü–∏–∏ –∏ —Ü–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä?
                     </b>''', reply_markup=markup)
    bot.register_next_step_handler(message, final)


def final(message):
    data[str(message.chat.id)].append(message.text)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('‚ÅÉ –î–∞', request_contact=True))
    markup.add(types.KeyboardButton('‚ÅÉ –ü–æ–∫–∞ –Ω–µ—Ç'))
    bot.send_message(message.chat.id,
                     '''<b>
–°—É–ø–µ—Ä, —Å–ø–∞—Å–∏–±–æ! –ú—ã –∫–æ–º–∞–Ω–¥–∞ —Ç—Ä–µ–π–¥–µ—Ä–æ–≤ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä–∞—è —Ç–æ—Ä–≥—É–µ—Ç –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ –∏ —É—Å–ø–µ—à–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–±—ã–ª—å. –ì–æ—Ç–æ–≤—ã –≤–∞—Å –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å. –ß—Ç–æ —Å–∫–∞–∂–µ—Ç–µ, –ø–æ–æ–±—â–∞–µ–º—Å—è?
                     </b>''', reply_markup=markup)
    bot.register_next_step_handler(message, final_FORSURE)


def final_FORSURE(message):
    with open('ready_id.txt', 'a') as users_id:
        users_id.write(str(message.chat.id) + '\n')
    # print(message.contact.phone_number)
    if type(message.chat.username) != str:
        user_name = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ–≥–æ –Ω–µ —É–∫–∞–∑–∞–ª'
    else:
        user_name = message.chat.username
    data[str(message.chat.id)].append(user_name)
    data[str(message.chat.id)].append(message.chat.id)
    if message.content_type == 'contact':
        data[str(message.chat.id)].append(message.contact.phone_number)
        data[str(message.chat.id)].append(message.contact.first_name)
        data[str(message.chat.id)].append(message.contact.last_name)
        bot.send_message(message.chat.id, '<b>–û—Ç–ª–∏—á–Ω–æ! –ú—ã —Å–≤—è–∂–∏–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è.</b>')
        bot.send_message(-730859322,
                         f'''
–ó–∞—à—ë–ª –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. 
–ï–≥–æ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:
–í–∞–∂–Ω–æ—Å—Ç—å: <i>{data[str(message.chat.id)][0]}</i>;
–û–ø—ã—Ç: <i>{data[str(message.chat.id)][1]}</i>;
–û–ø—ã—Ç –≤ –∑–∞—Ä–∞–±–æ—Ç–∫–µ: <i>{data[str(message.chat.id)][2]}</i>;
Username: @<i>{data[str(message.chat.id)][3]}</i>;
ID –∞–∫–∫–∞—É–Ω—Ç–∞: <code>{data[str(message.chat.id)][4]}</code>
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <code>{data[str(message.chat.id)][5]}</code>;
–ò–º—è –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ: <i>{data[str(message.chat.id)][6]}</i>.
''')
    else:
        bot.send_message(-730859322,
                         f'''
–ó–∞—à—ë–ª –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. 
–ï–≥–æ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:
–í–∞–∂–Ω–æ—Å—Ç—å: <i>{data[str(message.chat.id)][0]}</i>;
–û–ø—ã—Ç: <i>{data[str(message.chat.id)][1]}</i>;
–û–ø—ã—Ç –≤ –∑–∞—Ä–∞–±–æ—Ç–∫–µ: <i>{data[str(message.chat.id)][2]}</i>;
Username: @<i>{data[str(message.chat.id)][3]}</i>
ID –∞–∫–∫–∞—É–Ω—Ç–∞: <code>{data[str(message.chat.id)][4]}</code>
        ''')
    google_sheets_registration([data[str(message.chat.id)]])
    if (bot.get_chat_member(-1001611319386, message.chat.id).status) == 'left':
        markup = types.InlineKeyboardMarkup(row_width=1)
        item5 = types.InlineKeyboardButton("üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/LINK_IS_PRIVATE')
        markup.add(item5)
        bot.send_message(message.chat.id, '<b>–°–æ–≤–µ—Ç—É–µ–º –∑–∞–π—Ç–∏ –≤ –Ω–∞—à —á–∞—Ç. –¢–∞–º –≤—Å–µ–≥–¥–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.</b>',
                         parse_mode='html',
                         reply_markup=markup)
        tm.sleep(5)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
        item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
        item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
        item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
        item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
        item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
        markup.add(item0, item3)
        markup.add(item2, item7)
        markup.add(item8, item9)
        markup.add(item123)
        bot.send_message(message.chat.id,
                         '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –Ø —è–≤–ª—è—é—Å—å –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–º –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –≤–∞–º–∏.\n–ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <i>¬´‚ôª <ins>Ô∏è–ü–æ–º–æ—â—å</ins> ¬ª</i>.\n–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã —Å–æ–≤–µ—Ç—É–µ–º —É–∫–∞–∑–∞—Ç—å –≤–∞—à <i>USDT</i> —Ç–æ–∫–µ–Ω –≤–æ –≤–∫–ª–∞–¥–∫–µ <i>¬´üöÄ <ins>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è </ins>¬ª</i>. –ï–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.</b>'.format(
                             message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)

    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
        item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
        item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
        item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
        item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
        item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
        markup.add(item0, item3)
        markup.add(item2, item7)
        markup.add(item8, item9)
        markup.add(item123)
        bot.send_message(message.chat.id,
                         '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π. –Ø —è–≤–ª—è—é—Å—å –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–º –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –≤–∞–º–∏.\n–ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <i>¬´‚ôª <ins>Ô∏è–ü–æ–º–æ—â—å</ins> ¬ª</i>.\n–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã —Å–æ–≤–µ—Ç—É–µ–º —É–∫–∞–∑–∞—Ç—å –≤–∞—à <i>USDT</i> —Ç–æ–∫–µ–Ω –≤–æ –≤–∫–ª–∞–¥–∫–µ <i>¬´üöÄ <ins>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è </ins>¬ª</i>. –ï–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.</b>'.format(
                             message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)


def peresil(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
    item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
    item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
    item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
    item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
    item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
    markup.add(item0, item3)
    markup.add(item2, item7)
    markup.add(item8, item9)
    markup.add(item123)
    if message.text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.send_message(message.chat.id, '‚ùáÔ∏è –í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', reply_markup=markup)
    elif message.text != '‚ùå  –ó–∞–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ':
        bot.forward_message(-1001654956289, message.chat.id, message.message_id)
        if type(message.chat.username) != str:
            user_name = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ–≥–æ –Ω–µ —É–∫–∞–∑–∞–ª'
        else:
            user_name = message.chat.username
        bot.send_message(-1001654956289, f'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{message.chat.id}</code>, username: @{user_name}')
        bot.send_message(message.chat.id, '–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.')
        bot.register_next_step_handler(message, peresil_1)
    else:
        bot.send_message(message.chat.id, '–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.', reply_markup=markup)


def peresil_1(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item0 = types.KeyboardButton("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
    item2 = types.KeyboardButton("‚ôªÔ∏è –ü–æ–º–æ—â—å")
    item3 = types.KeyboardButton('‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å')
    item7 = types.KeyboardButton('ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞')
    item8 = types.KeyboardButton('üíµ –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å')
    item9 = types.KeyboardButton('‚úÖ –ü–æ—á–µ–º—É –º—ã')
    item123 = types.KeyboardButton('üéô –û–±—â–∏–π —á–∞—Ç')
    markup.add(item0, item3)
    markup.add(item2, item7)
    markup.add(item8, item9)
    markup.add(item123)
    if message.text == 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.send_message(message.chat.id, '‚ùáÔ∏è –í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', reply_markup=markup)
    elif message.text != '‚ùå  –ó–∞–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ':
        bot.forward_message(-1001654956289, message.chat.id, message.message_id)
        bot.register_next_step_handler(message, peresil_1)
    else:
        bot.send_message(message.chat.id, '–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.', reply_markup=markup)
        bot.send_message(-1001654956289,
                         f'–û–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <ins><i>{message.from_user.first_name}</i></ins> –∑–∞–∫—Ä—ã—Ç–æ.')


def marketing(message):
    tags = str(message.text).split('\n')
    py_plot.plot(tags)
    with open('marketing.png', 'rb') as file:
        bot.send_photo(message.chat.id, file)


def send(message):
    try:
        if ' ' in message.text:
            bot.send_message(str(message.text)[0:str(message.text).index(' ') + 1],
                             str(message.text)[str(message.text).index(' ') + 1:])
            bot.send_message(message.chat.id, '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏–ª.')
        else:
            bot.send_message(message.chat.id, '–¢–∞–∫ –∏ –±–æ—Ç–∞ –º–æ–∂–Ω–æ —Å–ª–æ–º–∞—Ç—å, –Ω—É–∂–µ–Ω –ø—Ä–æ–±–µ–ª.')
    except:
        pass


def get_key(x, value):
    for k, v in x.items():
        if v == value:
            return k


def get_key_many(x, value):
    q = []
    for k, v in x.items():
        if v == value:
            q.append(k)
    return q


def find_user_by_ID(message):
    if message.text in users_token:
        bot.send_message(message.chat.id,
                         '<b>–î–∞–Ω–Ω—ã–µ —á–µ–ª–æ–≤–µ–∫–∞: ' + f'\n\nüí≥ USDT –∫–æ—à–µ–ª—ë–∫: <code>{users_token[str(message.text)]}</code>\n‚ÑπÔ∏è ID —Ç–µ–ª–µ–≥—Ä–∞–º–º: <code>{message.text}</code>\n\nüí∞ –ë–∞–ª–∞–Ω—Å: <ins><i>{users_bal[str(message.text)]} USD</i></ins>\nü•∑üèø –õ–æ–≥–∏–Ω: <ins><i>{users_login[str(message.text)]}</i></ins>\nüï∞ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: <ins><i>{time_id[str(message.text)]}\n</i></ins>üí∏ –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–Ω–µ—Å–ª–∞: <ins><i>{ref_got[str(message.text)]} USD</i></ins></b>',
                         parse_mode='html')
    else:
        bot.send_message(message.chat.id, '<b>–ù–µ —Å–º–æ–≥ —Ç–∞–∫–æ–≥–æ –Ω–∞–π—Ç–∏ :(</b>', parse_mode='html')


def ref_out(message):
    if float(ref_got[str(message.chat.id)]) != 0:
        with open('ref_got.txt') as file:
            for line in file:
                key, *value = line.split()
                ref_got[key] = value[0]
        bot.send_message(-713833994,
                         f'<b>–ü–æ—Å—Ç—É–ø–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ <i><ins>–†–ï–§–ï–†–ê–õ–¨–ù–´–•</ins></i> —Å—Ä–µ–¥—Å—Ç–≤.\n–ó–∞–ø—Ä–æ—Å–∏–ª: <ins>{str(message.chat.id)} </ins> ( –ª–æ–≥–∏–Ω <ins>{users_login[str(message.chat.id)]}</ins>).\n\n–°—É–º–º–∞: <code>{round(float(ref_got[str(message.chat.id)]), 3)}</code>.\n–ö–æ—à–µ–ª—ë–∫: <code> {users_token[str(message.chat.id)]} </code></b>',
                         parse_mode='html')
        with open('ref_got.txt', 'r') as f:
            old_data = f.read()
        new_data = old_data.replace(str(message.chat.id) + ' ' + ref_got[str(message.chat.id)],
                                    str(message.chat.id) + ' ' + '0')
        with open('ref_got.txt', 'w') as f:
            f.write(new_data)
    else:
        bot.send_message(message.chat.id, '<b>–ù–∞ –≤–∞—à–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º —Å—á–µ—Ç—É 0 —Ä—É–±–ª–µ–π.</b>', parse_mode='html')


def pereschet(message):
    with open('ref_id.txt') as file:
        for line in file:
            key, *value = line.split()
            ref_id[key] = value[0]
    with open('ref_got.txt') as file:
        for line in file:
            key, *value = line.split()
            ref_got[key] = value[0]
    with open('time_id.txt') as file:
        for line in file:
            key, *value = line.split()
            time_id[key] = value[0]
    with open('users_tok.txt') as file:
        for line in file:
            key, *value = line.split()
            users_token[key] = value[0]
    with open('users_bal.txt') as file:
        for line in file:
            key, *value = line.split()
            users_bal[key] = value[0]
    with open('users_log.txt') as file:
        for line in file:
            key, *value = line.split()
            users_login[key] = value[0]
    normal_users = {}
    for i in users_bal:
        if users_bal[i] != '0':
            normal_users[i] = users_bal[i]
    values = ref_id.values()
    procent = float(message.text) * 0.01
    couter = 1
    logins = []
    time = []
    summ_us = []
    token = []
    summ_ref_one = []
    summ_ref_all = []
    summ_all = []
    for i in normal_users:
        if i not in values:
            if (abs(parse(time_id[i]) - datetime.now())) < timedelta(days=30):
                bot.send_message(-690723715,
                                 f'<b><i><ins>–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä {str(couter)}</ins></i>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {i} (–ª–æ–≥–∏–Ω {users_login[i]})\n\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {time_id[i]}\n\n–°—É–º–º–∞: <code> {round(float(users_bal[i]) * abs(float(str((parse(time_id[i]) - datetime.now()).days))) * (procent / 30), 3)}</code>\n\n–ö–æ—à–µ–ª—ë–∫: <code> {users_token[i]} </code> </b>',
                                 parse_mode='html')
                logins.append(users_login[i])
                time.append(time_id[i])
                summ_us.append(round(
                    float(users_bal[i]) * abs(float(str((parse(time_id[i]) - datetime.now()).days))) * (procent / 30),
                    3))
                token.append(users_token[i])
                summ_ref_one.append(0)
                summ_ref_all.append(0)
                summ_all.append(round(
                    float(users_bal[i]) * abs(float(str((parse(time_id[i]) - datetime.now()).days))) * (procent / 30),
                    3))
            else:
                bot.send_message(-690723715,
                                 f'<b><i><ins>–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä {str(couter)}</ins></i>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {i} (–ª–æ–≥–∏–Ω {users_login[i]})\n\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {time_id[i]}\n\n–°—É–º–º–∞: <code> {round(float(users_bal[i]) * procent, 3)}</code>\n\n–ö–æ—à–µ–ª—ë–∫: <code> {users_token[i]} </code> </b>',
                                 parse_mode='html')
                logins.append(users_login[i])
                time.append(time_id[i])
                summ_us.append(round(float(users_bal[i]) * procent, 3))
                token.append(users_token[i])
                summ_ref_one.append(0)
                summ_ref_all.append(0)
                summ_all.append(round(float(users_bal[i]) * procent, 3))
        else:
            all_summ = 0
            refers = get_key_many(ref_id, i)
            summ = 0
            for j in range(len(refers)):
                if (abs(parse(time_id[refers[j]]) - datetime.now())) > timedelta(days=30):
                    summ = round(float(users_bal[refers[j]]) * 0.01, 3)
                if summ != 0:
                    all_summ += summ
            if (abs(parse(time_id[i]) - datetime.now())) < timedelta(days=30):
                bot.send_message(-690723715,
                                 f'<b><i><ins>–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä {str(couter)}</ins></i>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {i} (–ª–æ–≥–∏–Ω {users_login[i]})\n\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {time_id[i]}\n\n–°—É–º–º–∞: <code> {round(float(users_bal[i]) * abs(float(str((parse(time_id[i]) - datetime.now()).days))) * (procent / 30), 3)}</code>\n–°—É–º–º–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <code> {all_summ}</code>\n–°—É–º–º–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (–µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ): <code> {ref_got[i]}</code>\n–°—É–º–º–∞ –ø–æ –≤—Å–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º: <code>{float(ref_got[i]) + all_summ}</code>\n-------------------------\n–ò—Ç–æ–≥–æ: <code> {round(float(users_bal[i]) * abs(float(str((parse(time_id[i]) - datetime.now()).days))) * (procent / 30), 3) + float(ref_got[i]) + all_summ} </code>\n\n–ö–æ—à–µ–ª—ë–∫: <code> {users_token[i]} </code> </b>',
                                 parse_mode='html')
                logins.append(users_login[i])
                time.append(time_id[i])
                summ_us.append(round(
                    float(users_bal[i]) * abs(float(str((parse(time_id[i]) - datetime.now()).days))) * (procent / 30),
                    3))
                token.append(users_token[i])
                summ_ref_one.append(all_summ)
                summ_ref_all.append(float(ref_got[i]) + all_summ)
                summ_all.append(round(
                    float(users_bal[i]) * abs(float(str((parse(time_id[i]) - datetime.now()).days))) * (procent / 30),
                    3) + float(ref_got[i]) + all_summ)
            else:
                bot.send_message(-690723715,
                                 f'<b><i><ins>–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä {str(couter)}</ins></i>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {i} (–ª–æ–≥–∏–Ω {users_login[i]})\n\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {time_id[i]}\n\n–°—É–º–º–∞: <code> {round(float(users_bal[i]) * procent, 3)}\n–°—É–º–º–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <code> {all_summ}</code>\n–°—É–º–º–∞ –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (–µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ): <code> {ref_got[i]}</code>\n–°—É–º–º–∞ –ø–æ –≤—Å–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º: <code>{float(ref_got[i]) + all_summ}</code>\n-------------------------\n–ò—Ç–æ–≥–æ: <code> {round(float(users_bal[i]) * procent, 3) + float(ref_got[i]) + all_summ} </code>\n\n–ö–æ—à–µ–ª—ë–∫: <code> {users_token[i]} </code> </b>',
                                 parse_mode='html')

                logins.append(users_login[i])
                time.append(time_id[i])
                summ_us.append(round(float(users_bal[i]) * procent, 3))
                token.append(users_token[i])
                summ_ref_one.append(all_summ)
                summ_ref_all.append(float(ref_got[i]) + all_summ)
                summ_all.append(round(float(users_bal[i]) * procent, 3) + float(ref_got[i]) + all_summ)
        couter += 1
        df = pd.DataFrame(
            {
                '–õ–æ–≥–∏–Ω—ã': logins,
                '–í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏': time,
                '–°—É–º–º–∞': summ_us,
                '–ö–æ—à–µ–ª—ë–∫': token,
                '–°—É–º–º–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º': summ_ref_one,
                '–°—É–º–º–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º (–û–¥–Ω–æ—Ä–∞–∑–æ–≤–æ)': summ_ref_all,
                '–°—É–º–º–∞ –ø–æ–ª–Ω–∞—è': summ_all}
        )
        # Save Styler Object for Later
        df.to_excel('./final.xlsx')
        book = openpyxl.load_workbook('final.xlsx')
        sheet = book.active
        sheet.column_dimensions['C'].width = len('–í—Ä–µ–º—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        sheet.column_dimensions['B'].width = 20
        sheet.column_dimensions['D'].width = 10
        sheet.column_dimensions['E'].width = 35
        sheet.column_dimensions['F'].width = 22
        sheet.column_dimensions['G'].width = 25
        sheet.column_dimensions['H'].width = 20
        for q in range(len(logins)):
            sheet[f'B{str(q + 2)}'].style = 'Good'
        for q in range(len(logins)):
            sheet[f'C{str(q + 2)}'].style = 'Bad'
        for q in range(len(logins)):
            sheet[f'D{str(q + 2)}'].style = 'Linked Cell'
        for q in range(len(logins)):
            sheet[f'F{str(q + 2)}'].style = 'Input'
        for q in range(len(logins)):
            sheet[f'D{str(q + 2)}'].style = 'Neutral'
        font = Font(b=True, color='00DD00')
        fill2 = PatternFill('solid', fgColor='FFD700')
        for q in range(len(logins)):
            sheet[f'G{str(q + 2)}'].font = font
            sheet[f'G{str(q + 2)}'].fill = fill2

        for q in range(len(logins)):
            sheet[f'H{str(q + 2)}'].style = 'Note'
        book.save('./final.xlsx')
        for i in ref_got:
            with open('ref_got.txt', 'r') as f:
                old_data = f.read()
            new_data = old_data.replace(str(i) + ' ' + ref_got[i],
                                        i + ' ' + '0')
            with open('ref_got.txt', 'w') as f:
                f.write(new_data)
    with open('final.xlsx', 'rb') as file:
        bot.send_document(-690723715, file)


def color(row):
    if row.isnull().values.any() == True:
        return ['background-color: red'] * len(row)
    return [''] * len(row)


def find_user_by_login(message):
    values = users_login.values()
    if message.text in values:
        ID = get_key(users_login, message.text)
        bot.send_message(message.chat.id,
                         '<b>–î–∞–Ω–Ω—ã–µ —á–µ–ª–æ–≤–µ–∫–∞: ' + f'\n\nüí≥ USDT –∫–æ—à–µ–ª—ë–∫: <code>{users_token[ID]}</code>\n‚ÑπÔ∏è ID —Ç–µ–ª–µ–≥—Ä–∞–º–º: <code>{ID}</code>\n\nüí∞ –ë–∞–ª–∞–Ω—Å: <ins><i>{users_bal[ID]} RUB</i></ins>\nü•∑üèø –õ–æ–≥–∏–Ω: <ins><i>{users_login[ID]}</i></ins>\nüï∞ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: <ins><i>{time_id[ID]}\n</i></ins>üí∏ –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–Ω–µ—Å–ª–∞: <ins><i>{ref_got[ID]} USD</i></ins></b>',
                         parse_mode='html')
    else:
        bot.send_message(message.chat.id, '<b>–¢–∞–∫–æ–≥–æ –ª–æ–≥–∏–Ω–∞ –Ω–µ –Ω–∞—à—ë–ª :(</b>', parse_mode='html')


def token_change(message):
    with open('users_tok.txt') as file:
        for line in file:
            key, *value = line.split()
            users_token[key] = value[0]
    if ' ' in message.text or len(message.text) > 100 or not match(str(message.text).lower()):
        bot.send_message(message.chat.id, '<b>–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ—à–µ–ª—ë–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.</b>',
                         parse_mode='html')
    else:
        with open('users_tok.txt', 'r') as f:
            old_data = f.read()
        new_data = old_data.replace(str(message.chat.id) + ' ' + users_token[str(message.chat.id)],
                                    str(message.chat.id) + ' ' + message.text)
        with open('users_tok.txt', 'w') as f:
            f.write(new_data)
        bot.send_message(message.chat.id, '<b>–í–∞—à —Ç–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!</b>', parse_mode='html')


def token_remember(message):
    if ' ' in message.text or len(message.text) > 100 or not match(str(message.text).lower()):
        bot.send_message(message.chat.id,
                         '<b>–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ—à–µ–ª—ë–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ (–ù–∞–∂–º–∏—Ç–µ –Ω–∞ <i>¬´üöÄ <ins>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</ins>¬ª</i>).</b>',
                         parse_mode='html')
    else:
        with open('users_tok.txt', 'a') as users_tok:
            users_tok.write(str(message.chat.id) + ' ' + message.text + '\n')
        if str(message.chat.id) not in users_login:
            bot.send_message(message.chat.id,
                             '<b>–¢–∞–∫–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω ( –ø—Å–µ–≤–¥–æ–Ω–∏–º ) –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º. –ï–≥–æ –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å.</b>',
                             parse_mode='html')
            bot.register_next_step_handler(message, login_remember)


def login_remember(message):
    with open('users_log.txt') as file:
        for line in file:
            key, *value = line.split()
            users_login[key] = value[0]
    values = users_login.values()
    if ' ' in message.text or len(message.text) > 100 or not match(str(message.text).lower()):
        bot.send_message(message.chat.id,
                         '<b>–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –õ–æ–≥–∏–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ (–ù–∞–∂–º–∏—Ç–µ –Ω–∞ <i>¬´üöÄ <ins>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</ins>¬ª</i>).</b>',
                         parse_mode='html')
    elif message.text in values:
        bot.send_message(message.chat.id, '<b>–¢–∞–∫–æ–π –ª–æ–≥–∏–Ω —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π</b>', parse_mode='html')
    else:
        with open('users_log.txt', 'a') as users_tok:
            users_tok.write(str(message.chat.id) + ' ' + message.text + '\n')
        bot.send_message(message.chat.id, '<b>–í–∞—à –ª–æ–≥–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω!</b>', parse_mode='html')
        with open('users_log.txt') as file:
            for line in file:
                key, *value = line.split()
                users_login[key] = value[0]
        with open('users_tok.txt') as file:
            for line in file:
                key, *value = line.split()
                users_token[key] = value[0]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item2 = types.KeyboardButton("‚û∞ –ò–∑–º–µ–Ω–∏—Ç—å USDT-–∫–æ—à–µ–ª—ë–∫")
        item7 = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
        markup.add(item2)
        markup.add(item7)
        bot.send_message(message.chat.id, '<b>{0.first_name}, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: '.format(message.from_user,
                                                                                    bot.get_me()) + f'\n\nüí≥ –í–∞—à USDT –∫–æ—à–µ–ª—ë–∫: <code>{users_token[str(message.chat.id)]}</code>\n‚ÑπÔ∏è –í–∞—à ID —Ç–µ–ª–µ–≥—Ä–∞–º–º: <code>{message.chat.id}</code>\n\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: <ins><i>{users_bal[str(message.chat.id)]} USDT</i></ins>\nü•∑üèø –í–∞—à –ª–æ–≥–∏–Ω: <ins><i>{users_login[str(message.chat.id)]}</i></ins>\nüï∞ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: <ins><i>{time_id[str(message.chat.id)]}</i></ins>\nüí∏ –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–Ω–µ—Å–ª–∞: <ins><i>{str(round(float(ref_got[str(message.chat.id)]), 2))} USDT</i></ins></b>',
                         parse_mode='html', reply_markup=markup)
        bot.send_message(-730859322,
                         f'<b>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –ï–≥–æ —Ç–æ–∫–æ–µ–Ω: <code> {users_token[str(message.chat.id)]}.</code>\n–ï–≥–æ –ª–æ–≥–∏–Ω: <ins><i>{users_login[str(message.chat.id)]}</i></ins></b>',
                         parse_mode='html')


def minus_balance_by_id(message):
    if str(message.chat.id) in admins:
        with open('users_bal.txt', 'r') as f:
            old_data = f.read()
        new_data = old_data.replace(user[message.chat.id] + ' ' + users_bal[user[message.chat.id]],
                                    user[message.chat.id] + ' ' + str(
                                        float(users_bal[user[message.chat.id]]) - float(message.text)))
        with open('users_bal.txt', 'w') as f:
            f.write(new_data)
        with open('users_bal.txt') as file:
            for line in file:
                key, *value = line.split()
                users_bal[key] = value[0]
        bot.send_message(message.chat.id,
                         f'<b>–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω—ë–Ω. –ù—ã–Ω—à–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å –∑–æ–≤–∞—Ç–µ–ª—è {user[message.chat.id]} : <ins> {users_bal[user[message.chat.id]]} </ins></b>',
                         parse_mode='html')


def minus_balance_by_login(message):
    if str(message.chat.id) in admins:
        with open('users_bal.txt', 'r') as f:
            old_data = f.read()
        new_data = old_data.replace(user[message.chat.id] + ' ' + users_bal[user[message.chat.id]],
                                    user[message.chat.id] + ' ' + str(
                                        float(users_bal[user[message.chat.id]]) - float(message.text)))
        with open('users_bal.txt', 'w') as f:
            f.write(new_data)
        with open('users_bal.txt') as file:
            for line in file:
                key, *value = line.split()
                users_bal[key] = value[0]
        bot.send_message(message.chat.id,
                         f'<b>–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω—ë–Ω. –ù—ã–Ω—à–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user[message.chat.id]} : <ins> {users_bal[user[message.chat.id]]} </ins></b>',
                         parse_mode='html')


def add_balance_by_id(message):
    if str(message.chat.id) in admins:
        with open('ref_id.txt') as file:
            for line in file:
                key, *value = line.split()
                ref_id[key] = value[0]
        with open('users_bal.txt', 'r') as f:
            old_data = f.read()
        new_data = old_data.replace(user[message.chat.id] + ' ' + users_bal[user[message.chat.id]],
                                    user[message.chat.id] + ' ' + str(
                                        float(message.text) + float(users_bal[user[message.chat.id]])))
        with open('users_bal.txt', 'w') as f:
            f.write(new_data)
        with open('users_bal.txt') as file:
            for line in file:
                key, *value = line.split()
                users_bal[key] = value[0]
        if str(user[message.chat.id]) not in ref_id:
            bot.send_message(message.chat.id,
                             f'<b>–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω—ë–Ω. –ù—ã–Ω—à–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user[message.chat.id]} : <ins> {users_bal[user[message.chat.id]]} </ins></b>',
                             parse_mode='html')
        else:
            with open('ref_got.txt', 'r') as f:
                old_data = f.read()
            new_data = old_data.replace(ref_id[user[message.chat.id]] + ' ' + ref_got[ref_id[user[message.chat.id]]],
                                        ref_id[user[message.chat.id]] + ' ' + str(
                                            float(float(message.text) * 0.03) + float(
                                                ref_got[ref_id[user[message.chat.id]]])))
            with open('ref_got.txt', 'w') as f:
                f.write(new_data)
            with open('users_bal.txt') as file:
                for line in file:
                    key, *value = line.split()
                    users_bal[key] = value[0]
            bot.send_message(message.chat.id,
                             f'<b>–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω—ë–Ω. –ù—ã–Ω—à–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user[message.chat.id]} : <ins> {users_bal[user[message.chat.id]]} </ins>\n–ê –µ—â—ë —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —Ä–µ—Ñ–µ—Ä–æ–º <ins><i>{users_login[ref_id[user[message.chat.id]]]}</i></ins>.</b>',
                             parse_mode='html')


def add_balance_by_login(message):
    if str(message.chat.id) in admins:
        with open('ref_id.txt') as file:
            for line in file:
                key, *value = line.split()
                ref_id[key] = value[0]
        with open('ref_got.txt') as file:
            for line in file:
                key, *value = line.split()
                ref_got[key] = value[0]
        with open('users_bal.txt', 'r') as f:
            old_data = f.read()
        new_data = old_data.replace(user[message.chat.id] + ' ' + users_bal[user[message.chat.id]],
                                    user[message.chat.id] + ' ' + str(
                                        float(message.text) + float(users_bal[user[message.chat.id]])))
        with open('users_bal.txt', 'w') as f:
            f.write(new_data)
        with open('users_bal.txt') as file:
            for line in file:
                key, *value = line.split()
                users_bal[key] = value[0]
        if str(user[message.chat.id]) not in ref_id:
            bot.send_message(message.chat.id,
                             f'<b>–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω—ë–Ω. –ù—ã–Ω—à–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user[message.chat.id]} : <ins> {users_bal[user[message.chat.id]]} </ins></b>',
                             parse_mode='html')
        else:
            with open('ref_got.txt', 'r') as f:
                old_data = f.read()
            new_data = old_data.replace(ref_id[user[message.chat.id]] + ' ' + ref_got[ref_id[user[message.chat.id]]],
                                        ref_id[user[message.chat.id]] + ' ' + str(
                                            float(float(message.text) * 0.03) + float(
                                                ref_got[ref_id[user[message.chat.id]]])))
            with open('ref_got.txt', 'w') as f:
                f.write(new_data)
            with open('users_bal.txt') as file:
                for line in file:
                    key, *value = line.split()
                    users_bal[key] = value[0]
            bot.send_message(message.chat.id,
                             f'<b>–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω—ë–Ω. –ù—ã–Ω—à–µ–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user[message.chat.id]} : <ins> {users_bal[user[message.chat.id]]} </ins>\n–ê –µ—â—ë —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª —Ä–µ—Ñ–µ—Ä–æ–º <ins><i>{users_login[ref_id[user[message.chat.id]]]}</i></ins>.</b>',
                             parse_mode='html')


def change_balanse_by_id(message):
    if message.text in users_token:
        user[message.chat.id] = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item2 = types.KeyboardButton("üíî –ü–æ–Ω–∏–∑–∏—Ç—å –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        item3 = types.KeyboardButton("üíõ –ü–æ–≤—ã—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        item4 = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item3)
        markup.add(item2)
        markup.add(item4)
        bot.send_message(message.chat.id, f'<b>–ù–∞—à—ë–ª —Ç–∞–∫–æ–≥–æ. –ï–≥–æ –Ω—ã–Ω–µ—à–Ω–∏–π –±–∞–ª–∞–Ω—Å: {users_bal[message.text]}. </b>',
                         parse_mode='html', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '<b>–ù–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–≥–æ.</b>', parse_mode='html')


def change_balanse_by_login(message):
    user[message.chat.id] = get_key(users_login, message.text)
    if user[message.chat.id] in users_token:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item2 = types.KeyboardButton("üìâ –ü–æ–Ω–∏–∑–∏—Ç—å –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        item3 = types.KeyboardButton("üìà –ü–æ–≤—ã—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        item4 = types.KeyboardButton("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item3)
        markup.add(item2)
        markup.add(item4)
        bot.send_message(message.chat.id,
                         f'<b>–ù–∞—à—ë–ª —Ç–∞–∫–æ–≥–æ. –ï–≥–æ –Ω—ã–Ω–µ—à–Ω–∏–π –±–∞–ª–∞–Ω—Å: {users_bal[user[message.chat.id]]}. </b>',
                         parse_mode='html', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '<b>–ù–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–≥–æ.</b>', parse_mode='html')


def cash_out(message):
    try:
        if float(message.text) > float(users_bal[str(message.chat.id)]):
            bot.send_message(message.chat.id, '<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å —Å—Ç–æ–ª—å–∫–æ –Ω–µ—Ç.</b>', parse_mode='html')
        else:
            bot.send_message(-713833994,
                             f'<i> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} (–ª–æ–≥–∏–Ω <b><ins>{users_login[str(message.chat.id)]}</ins></b>) –∑–∞–ø—Ä–æ—Å–∏–ª –≤—ã–≤–æ–¥ –Ω–∞ <code>{message.text}</code>.\n\n–ï–≥–æ –∫–æ—à–µ–ª—ë–∫: <code>{users_token[str(message.chat.id)]}</code></i>',
                             parse_mode='html')
    except Exception as er:
        bot.send_message(message.chat.id, '<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–∏–¥–µ—Ç–µ —á–∏—Å–ª–æ.</b>', parse_mode='html')
        print(er)


def calculate_money(message):
    try:
        num = float(message.text)
        bot.send_message(message.chat.id,
                         f'<b>–í —Å—Ä–µ–¥–Ω–µ–º –Ω–∞—à–∞ –ø—Ä–∏–±—ã–ª—å –≤ –º–µ—Å—è—Ü —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 4%. \n\n<i>–ü—Ä–∏–±—ã–ª—å –∑–∞ –º–µ—Å—è—Ü: <ins>{str(num * 0.04)} RUB</ins>\n–ü—Ä–∏–±—ã–ª—å –∑–∞ –≥–æ–¥: <ins>{str(num * 0.04 * 12)} RUB</ins></i></b>',
                         parse_mode='html')

    except ValueError:
        bot.send_message(message.chat.id, '<b>–í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.</b>', parse_mode='html')


def match(text):
    alphabet = set('–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è')
    return alphabet.isdisjoint(text.lower())


def get_service_sacc():
    scopes = ['https://www.googleapis.com/auth/spreadsheets']

    creds_service = ServiceAccountCredentials.from_json_keyfile_name('creds.json', scopes).authorize(httplib2.Http())
    return build('sheets', 'v4', http=creds_service)


def google_sheets_registration(values):
    sheet = get_service_sacc().spreadsheets()

    sheet_id = "1M_yvvYre05nMgC_5I4a7DIMQGXj-AHiPt38FVdXa27o"

    sheet.values().append(
        spreadsheetId=sheet_id,
        range="–í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂",
        valueInputOption="RAW",
        body={'values': values}).execute()


try:
    bot.infinity_polling(timeout=10, long_polling_timeout=5)
except (ConnectionError, ReadTimeout) as e:
    sys.stdout.flush()
    os.execv(sys.argv[0], sys.argv)
else:
    bot.infinity_polling(timeout=10, long_polling_timeout=5)
